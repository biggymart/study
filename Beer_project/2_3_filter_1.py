import numpy as np
from PIL import Image, ImageOps
from tensorflow.keras.models import load_model
import cv2 
import matplotlib.pyplot as plt
import os

# SIFT를 활용하여 cass한 번 해보자
# X 재료
THRESH_HOLD = 75
beer_lst = os.listdir('C:/data/image/beer/') # ['cass', 'filgood', 'filite', 'hite']

# X: 맥주의 이름, y: 해당 맥주의 디렉토리 3가지
def get_dir(beer):
    # archetypical image of beer can (첫번째 사진)
    std_img_dir = 'C:/data/image/beer/{0}/frame0.jpg'.format(beer)

    # data from selenium
    test_base_dir = 'C:/data/image/beer_selenium/{0}/'.format(beer)
    test_img_lst = os.listdir(test_base_dir)
    return std_img_dir, test_base_dir, test_img_lst

# X: 이미지 두 개의 디렉토리 y: 두 이미지의 매칭 갯수
def feature_match(img1_dir, img2_dir):
    img1 = cv2.imread(img1_dir)  
    img2 = cv2.imread(img2_dir) 

    img1 = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)
    img2 = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)

    #sift
    sift = cv2.SIFT_create()
    keypoints_1, descriptors_1 = sift.detectAndCompute(img1, None)
    keypoints_2, descriptors_2 = sift.detectAndCompute(img2, None)

    #feature matching
    bf = cv2.BFMatcher(cv2.NORM_L1, crossCheck=True)
    matches = bf.match(descriptors_1, descriptors_2)
    matches = sorted(matches, key = lambda x:x.distance)
    return len(matches)



# bucket_cass = []
# cass_dir1, cass_dir2, cass_dir3 = get_dir('cass')
# for i in range(len(cass_dir3)):
#     num_feature = feature_match(cass_dir1, cass_dir2 + cass_dir3[i])
#     bucket_cass.append(num_feature)
#     print(i, "attached")

# bucket_filgood = []
# filgood_dir1, filgood_dir2, filgood_dir3 = get_dir('filgood')
# for i in range(len(filgood_dir3)):
#     num_feature = feature_match(filgood_dir1, filgood_dir2 + filgood_dir3[i])
#     bucket_filgood.append(num_feature)
#     print(i, "attached")

# bucket_filite = []
# filite_dir1, filite_dir2, filite_dir3 = get_dir('filite')
# for i in range(len(filite_dir3)):
#     num_feature = feature_match(filite_dir1, filite_dir2 + filite_dir3[i])
#     bucket_filite.append(num_feature)
#     print(i, "attached")

bucket_hite = []
hite_dir1, hite_dir2, hite_dir3 = get_dir('hite')
for i in range(len(hite_dir3)):
    num_feature = feature_match(hite_dir1, hite_dir2 + hite_dir3[i])
    bucket_hite.append(num_feature)
    print(i, "attached")

# print(bucket_cass)
# print(bucket_filgood)
# print(bucket_filite)
print(bucket_hite)

# Cass
# [83, 97, 109, 95, 67, 128, 217, 185, 117, 98, 123, 109, 97, 129, 159, 146, 121, 115, 118, 113, 104, 160, 171, 71, 145, 96, 125, 154, 141, 163, 152, 78, 122, 138, 116, 156, 46, 198, 95, 141, 104, 131, 117, 180, 177, 101, 171, 139, 147, 29, 120, 119, 128, 103, 114, 109, 133, 168, 122, 150, 173, 96, 28, 28, 64, 155, 60, 134, 59, 141, 175, 90, 136, 92, 93, 135, 70, 180, 94, 160, 123, 120, 99, 154, 197, 162, 151, 131, 206, 62, 104, 193, 59, 94, 28, 165, 142, 94, 110, 200, 181, 144, 114, 172, 97, 178, 136, 83, 136, 114, 208, 194, 114, 132, 146, 174, 78, 115, 170, 197, 153, 130, 116, 86, 117, 65, 86, 147, 152, 116, 195, 163, 68, 115, 93, 149, 96, 158, 79, 189, 97, 150, 118, 118, 167, 116, 138, 71, 74, 56, 105, 106, 152, 218, 138, 82, 62, 218, 118, 50, 179, 118, 121, 94, 119, 97, 135, 126, 179, 139, 59, 145, 100, 113, 131, 148, 100, 119, 109, 166, 143, 116, 94, 143, 138, 95, 213, 145, 147, 111, 69, 139, 139, 81, 31, 146, 57, 136, 95, 112, 78, 201, 127, 195, 125, 160, 152, 135, 94, 44, 134, 55, 131, 109, 102, 102, 189, 240, 86, 164, 118, 78, 148, 114, 134, 141, 218, 118, 186, 28, 28, 64, 133, 43, 73, 59, 167, 102, 65, 133, 130, 184, 137, 196, 132, 103, 94, 79, 65, 91, 127, 122, 150, 96, 243, 96, 147, 28, 139, 59, 94, 28, 200, 61, 135, 146, 78, 132, 159, 100, 175, 173, 115, 135, 142, 158, 135, 170, 114, 188, 123, 110, 117, 157, 206, 84, 123, 169, 133, 80, 174, 125, 124, 144, 81, 122, 72, 72, 130, 148, 230, 136, 145, 121, 61, 182, 86, 113, 146, 158, 67, 159, 60, 168, 92, 125, 109, 112, 187, 95, 114, 199, 
# 66, 187, 84, 50, 197, 153, 137, 120, 50, 101, 199, 130, 28, 125, 160, 177, 120, 182, 58, 128, 82, 155, 88, 182, 77, 100, 84, 150, 91, 85, 137, 109, 187, 77, 173, 49, 51, 194, 179, 107, 110, 114, 72, 94, 164, 147, 109, 135, 96, 95, 93, 95, 126, 100, 130, 145, 68, 165, 154, 78, 127, 164, 164, 99, 107, 148, 113, 110, 104, 120, 197, 124, 191, 28, 28, 64, 88, 232, 89, 146, 134, 153, 96, 76, 108, 182, 140, 64, 96, 145, 87, 166, 115, 183, 189, 157, 89, 103, 41, 155, 114, 95, 109, 59, 94, 28, 115, 198, 146, 158, 207, 166, 161, 88, 130, 177, 96, 109, 136, 104, 156, 111, 133, 28, 138, 102, 68, 188, 80, 157, 79, 136, 178, 111, 93, 91, 110, 236, 106, 124, 163, 86, 134, 127, 180, 112, 151, 189, 103, 110, 101, 118, 191, 189, 201, 175, 180, 103, 87, 86, 140, 154, 185, 79, 64, 113, 226, 189, 102, 162, 84, 133, 71, 121, 198, 170, 225, 130, 132, 95, 166, 48, 181, 77, 52, 87, 175, 54, 124, 156, 197, 82, 143, 143, 201, 130, 134, 88, 165, 123, 192, 203, 133, 166, 125, 118, 129, 118]
# from statistics import *
# print(quantiles(a, n=8)) # [74.75, 95.0, 110.0, 123.0, 137.0, 155.0, 180.0]
# range: 28 ~ 243

# Filgood
# [66, 111, 130, 131, 76, 115, 166, 220, 136, 129, 168, 109, 108, 193, 106, 49, 164, 148, 276, 78, 92, 227, 92, 121, 84, 101, 110, 102, 119, 114, 88, 65, 83, 161, 99, 253, 124, 107, 204, 199, 159, 121, 122, 170, 181, 85, 67, 127, 75, 165, 118, 103, 162, 93, 142, 101, 90, 134, 240, 58, 99, 109, 218, 82, 256, 167, 91, 95, 201, 208, 167, 151, 101, 70, 95, 119, 108, 236, 104]

# Filite
# [367, 187, 138, 134, 186, 209, 122, 283, 216, 176, 256, 205, 221, 87, 209, 247, 121, 41, 92, 343, 155, 159, 325, 273, 199, 234, 248, 203, 206, 132, 228, 269, 188, 166, 238, 131, 114, 259, 234, 265, 161, 175, 211, 281, 226, 336, 177, 113, 268, 276, 205, 332, 283, 81, 415, 169, 173, 171, 151, 74, 275, 243, 113, 342, 188, 163, 219, 375, 154, 330, 145, 41, 106, 42, 25, 197, 217, 80, 257, 235, 216, 184, 214, 60, 424, 136, 219, 169, 92, 258, 209, 176, 203, 92, 356, 169, 158, 254, 151, 172, 324, 317, 74, 133, 56, 183, 228, 275, 142, 259, 156, 171, 136, 167, 256, 74, 250, 237, 71, 253, 267, 223, 249, 19, 191, 250, 343, 155, 223, 52, 207, 408, 33, 41, 
# 56, 124, 131, 385, 151, 271, 175, 230, 241, 388, 198, 222, 232, 349, 117, 202, 242, 300, 172, 114, 361, 223, 180, 191, 285, 180, 208, 583, 60, 41, 75, 95, 209, 107, 96, 267, 317, 154, 114, 212, 301, 156, 68, 152, 94, 
# 207, 237, 114, 199, 253, 339, 207, 302, 275, 281, 217, 167, 167, 121, 41, 92, 176, 163, 75, 174, 246, 133, 191, 353, 96, 299, 170, 216, 383, 118, 190, 232, 161, 185, 62, 318, 287, 152, 169, 152, 297, 141, 131, 217, 244, 279, 283, 74, 133, 56, 204, 409, 355, 231, 183, 210, 106, 260, 210, 124, 228, 241, 138, 244, 352, 243, 160, 42, 136, 187, 249, 215, 158, 182, 183, 278, 33, 41, 25, 56, 202, 310, 107, 105, 365, 171, 182, 249, 310, 167, 178, 223, 147, 126, 353, 258, 295, 166, 141, 169, 173, 264, 233, 192, 439, 218, 60, 41, 75, 111, 135, 285, 183, 232, 135, 152, 209, 208, 127, 246, 351, 244]

# Hite
# [271, 204, 186, 154, 198, 106, 320, 98, 132, 81, 192, 106, 142, 213, 112, 185, 43, 33, 65, 165, 300, 270, 46, 151, 150, 226, 135, 178, 172, 262, 129, 142, 148, 79, 226, 126, 84, 121, 238, 70, 193, 307, 178, 87, 161, 233, 156, 179, 158, 114, 114, 285, 163, 47, 385, 185, 290, 185, 102, 151, 97, 69, 205, 235, 254, 212, 112, 144, 89, 167, 71, 127, 40, 76, 73, 176, 298, 87, 221, 219, 191, 94, 59, 207, 84, 59, 230, 110, 89, 201, 395, 216, 178, 68, 185, 83, 147, 180, 373, 91, 111, 161, 22, 40, 47, 255, 145, 155, 52, 263, 303, 146, 97, 220, 252, 260, 205, 114, 59, 68, 193, 287, 182, 126, 234, 149, 411, 297, 96, 128, 59, 185, 33, 40, 83, 215, 202, 311, 212, 115, 144, 146, 144, 185, 215, 203, 122, 278, 267, 73, 120, 204, 175, 238, 119, 198, 154, 112, 82, 168, 45, 128, 40, 20, 97, 227, 192, 142, 179, 60, 237, 158, 215, 155, 232, 141, 67, 165, 119, 257, 40, 122, 173, 
# 126, 203, 133, 152, 172, 139, 259, 137, 229, 43, 33, 65, 265, 316, 172, 111, 414, 54, 104, 161, 260, 246, 92, 205, 177, 81, 145, 129, 105, 214, 253, 157, 140, 166, 155, 142, 189, 101, 253, 158, 247, 328, 232, 73, 22, 
# 47, 122, 121, 191, 111, 195, 109, 40, 193, 129, 117, 166, 168, 161, 217, 234, 188, 81, 76, 218, 94, 64, 160, 219, 111, 212, 293, 33, 40, 40, 83, 289, 240, 68, 20, 56, 202, 237, 80, 213, 216, 104, 151, 90, 302, 164, 240, 175, 252, 145, 103, 280, 167, 143, 151, 181, 276, 40, 20, 97, 162, 277, 86, 134, 212, 147, 70, 277, 134, 212, 321, 163, 89]
######################################

## os.listdir
## del 해서 자동으로 걸러주도록 하자
